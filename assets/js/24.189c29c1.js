(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{376:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js基础-原型、原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js基础-原型、原型链"}},[t._v("#")]),t._v(" JS基础-原型、原型链")]),t._v(" "),a("p",[t._v('JS的原型、原型链一直是比较难理解的内容，不少初学者甚至有一定经验的老鸟都不一定能完全说清楚，更多的"很可能"是一知半解，而这部分内容又是JS的核心内容，想要技术进阶的话肯定不能对这个概念一知半解，碰到问题靠“猜”，却不理解它的规则！')]),t._v(" "),a("h2",{attrs:{id:"prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" prototype")]),t._v(" "),a("h3",{attrs:{id:"只有函数有prototype属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只有函数有prototype属性"}},[t._v("#")]),t._v(" 只有函数有prototype属性")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { constructor: function(){...} }")]),t._v("\n")])])]),a("h4",{attrs:{id:"object-prototype怎么解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype怎么解释"}},[t._v("#")]),t._v(" Object.prototype怎么解释？")]),t._v(" "),a("p",[t._v("其实"),a("code",[t._v("Object")]),t._v("是一个全局对象，也是一个构造函数，以及其他基本类型的全局对象也都是构造函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outTypeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" typeName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outTypeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Function]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outTypeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Function]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outTypeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Function]")]),t._v("\n")])])]),a("h3",{attrs:{id:"为什么只有函数有prototype属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么只有函数有prototype属性"}},[t._v("#")]),t._v(" 为什么只有函数有prototype属性")]),t._v(" "),a("p",[t._v("JS通过"),a("code",[t._v("new")]),t._v("来生成对象，但是仅靠构造函数，每次生成的对象都不一样。")]),t._v(" "),a("p",[t._v("有时候需要在两个对象之间共享属性，由于JS在设计之初没有类的概念，所以JS使用函数的"),a("code",[t._v("prototype")]),t._v("来处理这部分"),a("strong",[t._v("需要被共享的属性")]),t._v("，通过函数的"),a("code",[t._v("prototype")]),t._v("来模拟类：")]),t._v(" "),a("p",[t._v("当创建一个函数时，JS会自动为函数添加"),a("code",[t._v("prototype")]),t._v("属性，值是一个有"),a("code",[t._v("constructor")]),t._v("的对象。")]),t._v(" "),a("p",[t._v("以下是共享属性"),a("code",[t._v("prototype")]),t._v("的栗子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 岁数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建两个实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" People1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OBKoro1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" People2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'扣肉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长大了一岁")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("People1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" People2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 24 24")]),t._v("\n")])])]),a("p",[a("strong",[t._v("为什么"),a("code",[t._v("People1")]),t._v("和"),a("code",[t._v("People2")]),t._v("可以访问到"),a("code",[t._v("People.prototype.age")])]),t._v("？")]),t._v(" "),a("p",[t._v("原因是："),a("code",[t._v("People1")]),t._v("和"),a("code",[t._v("People2")]),t._v("的原型是"),a("code",[t._v("People.prototype")]),t._v("，答案在下方的：构造函数是什么以及它做了什么。")]),t._v(" "),a("h2",{attrs:{id:"原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),a("h3",{attrs:{id:"proto-和object-getprototypeof-target-对象的原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proto-和object-getprototypeof-target-对象的原型"}},[t._v("#")]),t._v(" "),a("code",[t._v("__proto__")]),t._v("和"),a("code",[t._v("Object.getPrototypeOf(target)")]),t._v("： 对象的原型")]),t._v(" "),a("p",[a("code",[t._v("__proto__")]),t._v("是对象实例和它的构造函数之间建立的链接，它的值是：构造函数的`prototype。")]),t._v(" "),a("p",[t._v("也就是说："),a("code",[t._v("__proto__")]),t._v("的值是它所对应的原型对象，是某个函数的"),a("code",[t._v("prototype")])]),t._v(" "),a("p",[a("code",[t._v("Object.getPrototypeOf(target)")]),t._v("全等于"),a("code",[t._v("__proto__")]),t._v("。")]),t._v(" "),a("p",[t._v("它是ES6的标准，兼容IE9，主流浏览器也都支持，"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/GetPrototypeOf#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),a("OutboundLink")],1),t._v("，本文将以"),a("code",[t._v("Object.getPrototypeOf(target)")]),t._v("指代"),a("code",[t._v("__proto__")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"不要再使用-proto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不要再使用-proto"}},[t._v("#")]),t._v(" 不要再使用"),a("code",[t._v("__proto__")]),t._v(":")]),t._v(" "),a("blockquote",[a("p",[t._v("本段摘自"),a("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/object-methods#__proto__%E5%B1%9E%E6%80%A7%EF%BC%8CObject-setPrototypeOf%EF%BC%8CObject-getPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰-ES6入门"),a("OutboundLink")],1),t._v("，具体解析请点击链接查看")])]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("__proto__")]),t._v("属性没有写入 ES6 的正文，而是写入了附录。")])]),t._v(" "),a("li",[a("p",[t._v("原因是它本质上是一个内部属性，而"),a("strong",[t._v("不是一个正式的对外的 API，只是由于浏览器广泛支持，才被加入了 ES6")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("标准明确规定，只有浏览器必须部署这个属性，"),a("strong",[t._v("其他运行环境不一定需要部署，而且新的代码最好认为这个属性是不存在的")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("所以无论从语义的角度，还是从兼容性的角度，都不要使用这个属性，应该使用："),a("code",[t._v("Object.getPrototypeOf(target)")]),t._v("（读操作）、"),a("code",[t._v("Object.setPrototypeOf(target)")]),t._v("（写操作）、"),a("code",[t._v("Object.create(target)")]),t._v("（生成操作）代替")])])]),t._v(" "),a("h3",{attrs:{id:"构造函数是什么、它做了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数是什么、它做了什么"}},[t._v("#")]),t._v(" 构造函数是什么、它做了什么")]),t._v(" "),a("blockquote",[a("p",[t._v("出自《你不知道的在js》：在js中, 实际上并不存在所谓的'构造函数'，只有对于函数的'构造调用'。")])]),t._v(" "),a("p",[t._v("上文一直提到构造函数，所谓的构造函数，实际上就是通过关键字"),a("code",[t._v("new")]),t._v("来调用的函数：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("someFn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造调用函数")]),t._v("\n")])])]),a("p",[a("strong",[t._v("构造/new调用函数的时候做了什么")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("创建一个全新的对象。")]),t._v(" "),a("li",[t._v("这个新对象的原型("),a("code",[t._v("Object.getPrototypeOf(target)")]),t._v(")指向构造函数的"),a("code",[t._v("prototype")]),t._v("对象。")]),t._v(" "),a("li",[t._v("该函数的this会绑定在新创建的对象上。")]),t._v(" "),a("li",[t._v("如果函数没有返回其他对象，那么new表达式中的函数调用会自动返回这个新对象。")]),t._v(" "),a("li",[t._v("我们称这个新对象为构造函数的实例。")])]),t._v(" "),a("p",[a("strong",[t._v("原型继承就是利用构造调用函数的特性")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型继承：SubType继承SuperType")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SubType "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新指定constructor指向 方便找到构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载SuperType的this和prototype的属性和方法到SubType.prototype上")]),t._v("\n")])])]),a("ol",[a("li",[t._v("\b构造调用的第二点：将新对象的"),a("code",[t._v("Object.getPrototypeOf(target)")]),t._v("指向函数的"),a("code",[t._v("prototype")])]),t._v(" "),a("li",[t._v("构造调用的第三点：该函数的this会绑定在新创建的对象上。")]),t._v(" "),a("li",[t._v("新对象赋值给"),a("code",[t._v("SubType.prototype")])])]),t._v(" "),a("p",[t._v("原型类型有个缺点：多个实例对引用类型的操作会被篡改。")]),t._v(" "),a("blockquote",[a("p",[t._v("因为每次实例化引用类型的数据都指向同一个地址，所以它们读/写的是同一个数据，当一个实例对其进行操作，其他实例的数据就会一起更改。")])]),t._v(" "),a("h3",{attrs:{id:"原型链是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链是什么"}},[t._v("#")]),t._v(" 原型链是什么")]),t._v(" "),a("p",[t._v("来看个例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造调用foo 返回一个新对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newObj__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取newObj的原型对象")]),t._v("\nnewObj__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 验证newObj的原型指向foo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取foo.prototype的原型")]),t._v("\nfoo__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true foo.prototype的原型是Object.prototype")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n如果用以前的语法，从"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("newObj")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("查找"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("的原型，是这样的：\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("`js\nnewObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这种关系就是原型链")]),t._v("\n")])])]),a("p",[a("strong",[t._v("可以用以下三句话来理解原型链")]),t._v("：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("每个对象都拥有一个原型对象")]),t._v(": "),a("code",[t._v("newObj")]),t._v("的原型是"),a("code",[t._v("foo.prototype")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("对象的原型可能也是继承其他原型对象的")]),t._v(": "),a("code",[t._v("foo.prototype")]),t._v("也有它的原型"),a("code",[t._v("Object.prototype")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("一层一层的，以此类推，这种关系就是原型链")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"一个对象是否在另一个对象的原型链上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个对象是否在另一个对象的原型链上"}},[t._v("#")]),t._v(" 一个对象是否在另一个对象的原型链上")]),t._v(" "),a("blockquote",[a("p",[t._v("如果一个对象存在另一个对象的原型链上，我们可以说：它们是继承关系。")])]),t._v(" "),a("p",[t._v("判断方式有两种，但都是根据构造函数的"),a("code",[t._v("prototype")]),t._v("是否在原型链上来判断的：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("instanceof")]),t._v(": 用于测试构造函数的prototype属性是否出现在对象的原型链中的任何位置")])]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("object instanceof constructor")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" testObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntestObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true test.prototype在testObject的原型链上")]),t._v("\n testObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false Function.prototype 不在testObject的原型链上")]),t._v("\ntestObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true Object.prototype在testObject的原型链上")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("isPrototypeOf")]),t._v("：测试一个对象是否存在于另一个对象的原型链上")])]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("prototypeObj.isPrototypeOf(object)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" testObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true test.prototype在testObject的原型链上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true Object.prototype在testObject的原型链上")]),t._v("\n")])])]),a("h3",{attrs:{id:"原型链的终点-object-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链的终点-object-prototype"}},[t._v("#")]),t._v(" 原型链的终点: "),a("code",[t._v("Object.prototype")])]),t._v(" "),a("p",[a("code",[t._v("Object.prototype")]),t._v("是原型链的终点，所有对象都是从它继承了方法和属性。")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("Object.prototype")]),t._v("没有原型对象")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),a("p",[t._v("下面是两个验证例子，有疑虑的同学多写几个测试用例印证一下。")]),t._v(" "),a("p",[a("strong",[t._v("字符串原型链的终点")]),t._v("："),a("code",[t._v("Object.prototype")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'由String函数构造出来的'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stringPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串的原型")]),t._v("\nstringPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 字符串的原型是String对象")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stringPrototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true String对象的原型是Object对象")]),t._v("\n")])])]),a("p",[a("strong",[t._v("函数原型链的终点")]),t._v(":"),a("code",[t._v("Object.prototype")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fnPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfnPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true test的原型是Function.prototype")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"原型链用来做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链用来做什么"}},[t._v("#")]),t._v(" 原型链用来做什么？")]),t._v(" "),a("h4",{attrs:{id:"属性查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性查找"}},[t._v("#")]),t._v(" 属性查找：")]),t._v(" "),a("blockquote",[a("p",[t._v("如果试图访问对象(实例instance)的某个属性,会首先在对象内部寻找该属性,直至找不到,然后才在该对象的原型(instance.prototype)里去找这个属性，以此类推")])]),t._v(" "),a("p",[t._v("我们用一个例子来形象说明一下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'由String函数构造出来的'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stringPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串的原型")]),t._v("\nstringPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 字符串的原型是String对象")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stringPrototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true String对象的原型是Object对象")]),t._v("\n")])])]),a("p",[t._v("当你访问"),a("code",[t._v("test")]),t._v("的某个属性时，浏览器会进行以下查找：")]),t._v(" "),a("ol",[a("li",[t._v("浏览器首先查找"),a("code",[t._v("test")]),t._v(" 本身")]),t._v(" "),a("li",[t._v("接着查找它的原型对象："),a("code",[t._v("String.prototype")])]),t._v(" "),a("li",[t._v("最后查找"),a("code",[t._v("String.prototype")]),t._v("的原型对象："),a("code",[t._v("Object.prototype")])]),t._v(" "),a("li",[t._v("一旦在原型链上找到该属性，就会立即返回该属性，停止查找。")]),t._v(" "),a("li",[t._v("原型链上的原型都没有找到的话，返回"),a("code",[t._v("undefiend")])])]),t._v(" "),a("p",[t._v("这种查找机制还解释了字符串为何会有自带的方法: "),a("code",[t._v("slice")]),t._v("/"),a("code",[t._v("split")]),t._v("/"),a("code",[t._v("indexOf")]),t._v("等。")]),t._v(" "),a("p",[t._v("准确的说：")]),t._v(" "),a("ul",[a("li",[t._v("这些属性和方法是定义在"),a("code",[t._v("String")]),t._v("这个全局对象/函数上的。")]),t._v(" "),a("li",[t._v("字符串的原型指向了"),a("code",[t._v("String")]),t._v("函数的"),a("code",[t._v("prototype")]),t._v("。")]),t._v(" "),a("li",[t._v("之后通过查找原型链，在String函数的"),a("code",[t._v("prototype")]),t._v("中找到这些属性和方法。")])]),t._v(" "),a("h4",{attrs:{id:"拒绝查找原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拒绝查找原型链"}},[t._v("#")]),t._v(" 拒绝查找原型链：")]),t._v(" "),a("p",[a("code",[t._v("hasOwnProperty")]),t._v(": 指示对象自身属性中是否具有指定的属性")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("obj.hasOwnProperty(prop)")])]),t._v(" "),a("p",[t._v("参数: "),a("code",[t._v("prop")]),t._v(" 要查找的属性")]),t._v(" "),a("p",[t._v("返回值: 用来判断某个对象是否含有指定的属性的"),a("code",[t._v("Boolean")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OBKoro1'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'扣肉'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OBKoro1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'toString'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false test本身没查找到toString ")]),t._v("\n")])])]),a("p",[t._v("这个"),a("code",[t._v("API")]),t._v("是挂载在"),a("code",[t._v("object.prototype")]),t._v("上，所有对象都可以使用，API会忽略掉那些从原型链上继承到的属性。")]),t._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展：")]),t._v(" "),a("h3",{attrs:{id:"实例的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例的属性"}},[t._v("#")]),t._v(" 实例的属性")]),t._v(" "),a("p",[t._v("你知道构造函数的实例对象上有哪些属性吗？这些属性分别挂载在哪个地方？原因是什么？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'222'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ccc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ccc'")]),t._v("\n    foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obkoro1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obkoro1'")]),t._v("\n    foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aaa'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("koro "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'扣肉'")]),t._v("\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `foo1`上有哪些属性,这些属性分别挂载在哪个地方")]),t._v("\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新赋值")]),t._v("\n")])])]),a("p",[t._v("上面这道是考察"),a("code",[t._v("JS")]),t._v("基础的题，很多人都没说对，原因是没有彻底掌握"),a("code",[t._v("this")]),t._v("、"),a("code",[t._v("原型链")]),t._v("、"),a("code",[t._v("函数")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"想一下再看解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#想一下再看解析"}},[t._v("#")]),t._v(" 想一下再看解析：")]),t._v(" "),a("h4",{attrs:{id:"想一下再看解析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#想一下再看解析-2"}},[t._v("#")]),t._v(" 想一下再看解析：")]),t._v(" "),a("h4",{attrs:{id:"想一下再看解析-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#想一下再看解析-3"}},[t._v("#")]),t._v(" 想一下再看解析：")]),t._v(" "),a("h4",{attrs:{id:"想一下再看解析-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#想一下再看解析-4"}},[t._v("#")]),t._v(" 想一下再看解析：")]),t._v(" "),a("h4",{attrs:{id:"想一下再看解析-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#想一下再看解析-5"}},[t._v("#")]),t._v(" 想一下再看解析：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("this.some")]),t._v("："),a("code",[t._v("foo1")]),t._v("对象的属性")])]),t._v(" "),a("p",[t._v("通过构造调用"),a("code",[t._v("foo")]),t._v("的"),a("code",[t._v("this")]),t._v("指向"),a("code",[t._v("foo1")]),t._v("，所以"),a("code",[t._v("this.some")]),t._v("挂载在"),a("code",[t._v("foo1")]),t._v("对象下。")]),t._v(" "),a("p",[t._v("属性查找: "),a("code",[t._v("foo1.some")])]),t._v(" "),a("p",[a("code",[t._v("foo1.some")]),t._v("直接读取"),a("code",[t._v("foo1")]),t._v("的属性。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("foo1.test")]),t._v("、"),a("code",[t._v("foo1.a")]),t._v("："),a("code",[t._v("foo1")]),t._v("对象的原型")])]),t._v(" "),a("p",[t._v("根据上文提到的：构造/new调用函数的时候会创建一个新对象("),a("code",[t._v("foo1")]),t._v(")，自动将"),a("code",[t._v("foo1")]),t._v("的原型("),a("code",[t._v("Object.getPrototypeOf(foo1)")]),t._v(")指向构造函数的prototype对象。")]),t._v(" "),a("p",[t._v("构造调用会执行函数，所以"),a("code",[t._v("foo.prototype.a = 'aaaaa'")]),t._v("也会执行，单就赋值这个层面来说写在"),a("code",[t._v("foo")]),t._v("外面和写在"),a("code",[t._v("foo")]),t._v("里面是一样的。")]),t._v(" "),a("p",[t._v("属性查找："),a("code",[t._v("foo1.test")]),t._v("、"),a("code",[t._v("foo1.a")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("foo1")]),t._v("本身没有找到,继续查找")]),t._v(" "),a("li",[a("code",[t._v("foo1")]),t._v("的原型"),a("code",[t._v("Object.getPrototypeOf(foo1)")]),t._v("上找到了"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("test")]),t._v("，返回它们，停止查找。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[t._v("foo1.obkoro1")]),t._v("和"),a("code",[t._v("foo1.koro")]),t._v("：返回undefined")])]),t._v(" "),a("h4",{attrs:{id:"静态属性-foo-obkoro1、foo-koro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态属性-foo-obkoro1、foo-koro"}},[t._v("#")]),t._v(" 静态属性: "),a("code",[t._v("foo.obkoro1")]),t._v("、"),a("code",[t._v("foo.koro")])]),t._v(" "),a("blockquote",[a("p",[t._v("函数在JS中是一等公民，它也是一个对象, 用来模拟类。")])]),t._v(" "),a("p",[t._v("这两个属性跟"),a("code",[t._v("foo1")]),t._v("没有关系，它是对象"),a("code",[t._v("foo")]),t._v("上的两个属性(类似函数的:"),a("code",[t._v("arguments")]),t._v("/"),a("code",[t._v("prototype")]),t._v("/"),a("code",[t._v("length")]),t._v("等属性)，称为"),a("strong",[t._v("静态属性")]),t._v("。")]),t._v(" "),a("p",[t._v("它们只能通过"),a("code",[t._v("foo.obkoro1")]),t._v("和"),a("code",[t._v("foo.koro")]),t._v("来访问。")]),t._v(" "),a("h4",{attrs:{id:"原型对象改变-原型链下游获取的值也会改变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型对象改变-原型链下游获取的值也会改变"}},[t._v("#")]),t._v(" 原型对象改变，原型链下游获取的值也会改变")]),t._v(" "),a("p",[t._v("上面那个例子中的"),a("code",[t._v("foo1.test")]),t._v("的值是什么？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `foo1`上有哪些属性,这些属性分别挂载在哪个地方")]),t._v("\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新赋值")]),t._v("\n")])])]),a("p",[a("code",[t._v("foo1.test")]),t._v("的值是"),a("code",[t._v("test2")]),t._v("，原因是："),a("code",[t._v("foo1")]),t._v("的原型对象是"),a("code",[t._v("Object.getPrototypeOf(foo1)")]),t._v("存的指针，指向"),a("code",[t._v("foo.prototype")]),t._v("的内存地址，不是拷贝，每次读取的值都是当前"),a("code",[t._v("foo.prototype")]),t._v("的最新值。")]),t._v(" "),a("p",[a("strong",[t._v("打印"),a("code",[t._v("foo1")])]),t._v("：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/OBKoro1/articleImg_src/blob/master/2019/2019_8_25_prototype.png?raw=true",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("写了好几天，之前网上很多图文博客，那些线指来指去，就我个人看来还是比较难以理解的，所以本文纯文字的形式来描述这些概念，相信认真看完的同学肯定都有所收获，如果没看懂的话，建议多看几遍，这部分概念真的很重要！")]),t._v(" "),a("p",[t._v("PS：实际上还有很多引申出来的东西没写全，准备放到其他文章中去写。")]),t._v(" "),a("h4",{attrs:{id:"觉得我的博客对你有帮助的话-就给我点个star吧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#觉得我的博客对你有帮助的话-就给我点个star吧"}},[t._v("#")]),t._v(" 觉得我的博客对你有帮助的话，就给我点个"),a("a",{attrs:{href:"https://github.com/OBKoro1/web_accumulate",target:"_blank",rel:"noopener noreferrer"}},[t._v("Star"),a("OutboundLink")],1),t._v("吧！")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://obkoro1.com/web_accumulate/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端进阶积累"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://user-gold-cdn.xitu.io/2018/5/1/1631b6f52f7e7015?w=344&h=344&f=jpeg&s=8317",target:"_blank",rel:"noopener noreferrer"}},[t._v("公众号"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://github.com/OBKoro1",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),a("OutboundLink")],1),t._v("、wx:OBkoro1、邮箱：obkoro1@foxmail.com")]),t._v(" "),a("p",[t._v("以上2019/8/25")]),t._v(" "),a("p",[t._v("作者："),a("a",{attrs:{href:"https://github.com/OBKoro1",target:"_blank",rel:"noopener noreferrer"}},[t._v("OBKoro1"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("参考资料：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN:对象原型"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/58f94c9bb123db411953691b#heading-14",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS原型链与继承别再被问倒了"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/creeperyang/blog/issues/9",target:"_blank",rel:"noopener noreferrer"}},[t._v("从__proto__和prototype来深入理解JS对象和原型链"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);